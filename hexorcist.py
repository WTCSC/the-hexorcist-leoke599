print("")


def to_decimal(number_string, original_base):
    total_value = 0
    power = 0
    digits = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"

    for char in number_string[::-1]:
        char = char.upper()
        char_value = digits.index(char)
        total_value += (char_value * (original_base ** power))
        power += 1
        
    return total_value


def from_decimal(decimal_number, target_base):
    digits = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    decimal_number = int(decimal_number)

    if decimal_number == 0:
        return 0
    
    result_string = ""
    while decimal_number > 0:
        remainder = decimal_number % target_base
        decimal_number = decimal_number // target_base
        char_to_add = digits[remainder]
        result_string = char_to_add + result_string

    return result_string

# Main Program
def summon_67_kid():
    print("\nüóø‚ö° YO WAIT... IS THAT THE 67 KID?? ‚ö°üóø")
    print(r"""
‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†ø‚¢õ‚£õ‚£©‚£≠‚£≠‚£≠‚£≠‚£ô‚£©‚£≠‚£≠‚£≠‚£≠‚£ô‚£õ‚†ª‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†ü‚£ã‚£µ‚£∂‚£ø‚£ø‚£ø‚£ø‚£ø‚†ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°∑‚£¶‚£ô‚†ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚¢ã‚£¥‚£ø‚£ø‚°ü‚°ø‚¢ª‚£ø‚£ø‚°ü‚£ø‚†∏‚£ø‚°ô‚£ø‚£ø‚£á‚¢ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£ç‚°ª‚£∑‚£¨‚°ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚¢£‚£∂‚¢ø‚°ø‚¢ã‚†ç‚¢∞‚†É‚£æ‚£ø‚£ø‚¢°‚£ø‚°Ü‚¢ø‚£ß‚†π‚£ø‚£ø‚£Ü‚¢ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£¶‚°π‚£∑‚£å‚†ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†è‚£¥‚°ø‚°°‚†ã‚°¥‚¢£‚†¢‚†É‚£º‚£ø‚£ø‚¢É‚£æ‚£ø‚°á‚£å‚†ª‚£∑‚°à‚†ª‚¢ø‚£¶‚°ô‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£å‚¢ø‚£∑‚°ú‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚¢ã‚£º‚°ü‚†Å‚†Ñ‚£®‚†û‚°Å‚¢Ä‚£æ‚£ø‚°ø‚¢É‚£æ‚£ø‚¢è‚£¥‚£ø‚£∑‚£Æ‚£ô‚°Ç‚†Ñ‚†®‚¢ô‚°Ç‚†ô‚†ª‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ß‚°ô‚¢ø‚£Ü‚¢ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ü‚£∏‚£ø‚†É‚£¥‚£∂‚£ø‚†ñ‚££‚£æ‚£ø‚†ü‚£°‚°æ‚†ü‚£´‚£º‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£∂‚£§‚£º‚£∑‚£∂‚£¶‚£¨‚£ô‚°ª‚¢ø‚£ø‚£ø‚£ø‚£∑‚£ú‚†ø‚£é‚¢ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚¢†‚£ø‚£Ø‚£º‚°ø‚¢ü‚£°‚£æ‚†ø‚¢õ‚£°‚£§‚£¥‚£∂‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£¨‚°ô‚£ø‚£ø‚£ø‚£∑‚£∂‚£Ü‚†π‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†É‚£æ‚£ø‚£ø‚£¶‚£§‚£§‚¢Ä‚£∂‚£æ‚¢õ‚°≠‚†ê‚†í‚†í‚†¨‚°õ‚¢ø‚£ø‚£ø‚¢∏‚£ø‚£ø‚°å‚£ø‚£ø‚°ø‚¢ã‚†Ö‚†í‚†ê‚†í‚¢¨‚°ù‚¢ø‚£∑‚°ò‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚°ú‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚¢É‚£æ‚£ø‚°°‚°è‚†Ä‚†ê‚†Ä‚†Ç‚†Ä‚£à‚£º‚£ø‚°á‚¢æ‚£ø‚£ø‚°Ü‚¢ø‚£ø‚£ß‚£Ä‚†Ä‚†∞‚††‚†Ö‚†Ä‚¢π‚°é‚£ø‚£∑‚°ò‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†∑‚†¨‚¢ô‚¢ª‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø
‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚¢∏‚£ø‚£ø‚£ø‚£ø‚°è‚£º‚£ø‚£ø‚£ø‚°ø‚†∂‚†∂‚†∂‚¢û‚£´‚£º‚£ø‚†ü‚£°‚£≠‚£∂‚£¶‚£Ω‚£å‚†ª‚£ø‚£¶‚£ô‚°≤‚†∂‚†∂‚†∂‚¢ø‚£ø‚£ø‚£ø‚£ß‚†∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£¶‚£§‚£≠‚°≠‚¢Ä‚£ø‚£ø‚£ø‚£ø‚£ø
‚£ø‚£ø‚°ü‚¢ª‚£ø‚£ø‚£ø‚£ø‚°è‚£∏‚£ø‚£ø‚£ø‚°ø‚¢†‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ü‚¢ã‚£¥‚°ø‚†ì‚†π‚£ø‚°è‚†ô‚†ø‚¢∑‚£é‚¢ª‚°ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°Ü‚¢ª‚£ø‚£ø‚£ø‚£ø‚£ø‚°ü‚¢â‚£í‚°Å‚£º‚£ø‚£ø‚£ø‚°ø
‚£ø‚£ø‚£∑‚††‚£â‚°õ‚†ø‚¢õ‚£†‚£ø‚£ø‚£ø‚£ø‚°á‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚¢ã‚£µ‚£ø‚£¶‚£õ‚£†‚£¥‚£æ‚£ø‚£∑‚£∂‚£§‚£õ‚£õ‚£º‚£ø‚£¶‚£ô‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚¢°‚£ø‚£ø‚£ø‚°ø‚†û
‚£ø‚†ã‚¢õ‚†∑‚†ç‚†õ‚¢ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚¢∞‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚£´‚£∂‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£ç‚¢ª‚£ø‚£ø‚£ø‚£ø‚£ø‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚£°‚£æ‚£ø‚£ø‚£ø‚£ø‚°å
‚£ø‚†Ä‚†¶‚°ª‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ü‚¢∏‚£ø‚£ø‚£ø‚£ø‚¢è‚£¥‚£ø‚£ø‚£ø‚†ø‚†ü‚†õ‚£õ‚°õ‚†â‚†â‚£â‚†â‚†â‚¢õ‚£õ‚†õ‚°õ‚†ø‚†ø‚£ø‚£ø‚£ø‚£∑‚°π‚£ø‚£ø‚£ø‚£ø‚¢∏‚£ø‚£ø‚£ø‚£ø‚†ü‚£´‚†¥‚†ü‚£ª‚£ø‚£ø‚£ø‚°ø‚†Å
‚£ø‚£Ü‚†≥‚£¶‚£§‚£Ω‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ó‚¢∏‚£ø‚£ø‚£ø‚†á‚£æ‚£ø‚°ü‚†ã‚†Ä‚£¨‚¢°‚£∂‚£é‚£∞‚£ø‚£ø‚£Ä‚£æ‚£ø‚£∑‚£±‚£∂‚°é‚£•‚°î‚°Ç‚¢ç‚¢ø‚£ø‚£∑‚¢π‚£ø‚£ø‚°ü‚¢∏‚£ø‚£ø‚†ø‚£∑‚°∂‚†ñ‚£´‚£¥‚£ø‚°ø‚†è‚†Å‚†Ä‚†í
‚£ø‚£ø‚†£‚†ú‚†ª‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†∏‚£ø‚£ø‚°è‚¢∏‚£ø‚°è‚¢†‚¢∏‚¢á‚£ø‚¢ª‚£ø‚£ø‚£ø‚£ø‚£ø‚°õ‚£ø‚£ø‚£ø‚¢ø‚£ø‚†ø‚£ø‚£á‚£ø‚¢à‚†Ç‚¢π‚£ø‚°å‚£ø‚£ø‚°á‚£ø‚°ø‚†õ‚†¶‚†Ñ‚£Ä‚£ø‚°ø‚†â‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚£ø‚£ø‚£∑‚£¨‚°ê‚†ª‚¢ø‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°Ü‚¢ª‚£ø‚£ø‚¢∏‚£ø‚†Ä‚¢Ü‚¢Ü‚†£‚†ç‚†Ä‚†Ä‚†Ä‚†à‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢í‚£ã‚†ü‚°Ñ‚†à‚£ø‚°á‚£ø‚°ø‚¢∞‚°ø‚¢Å‚£∂‚£§‚£ç‚†ª‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£†‚£Ä‚£Ä
‚£ø‚£ø‚£ø‚£ø‚£∑‚£Ä‚†®‚¢º‚£ø‚£ø‚£ø‚£ø‚£ø‚£ß‚†∏‚£ø‚£ø‚¢∏‚£ø‚†Ä‚†ò‚†ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†â‚†ê‚†Å‚†Ä‚£ø‚¢£‚£ø‚†á‚°º‚¢É‚£º‚£ø‚£ø‚£ø‚£¶‚°ê‚¢∂‚£∂‚£¥‚£∂‚£ø‚£ø‚£ø‚£ø
‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£∂‚£§‚£≠‚£≠‚£Ñ‚†ô‚¢ø‚£Ü‚¢ª‚£ø‚°å‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ø‚£º‚°ø‚¢Ä‚£¥‚£ø‚£ø‚£ø‚£ø‚°è‚¢ø‚£∑‚£Ñ‚°ô‚¢æ‚£ø‚£ø‚£ø‚£ø‚£ø
‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ü‚¢†‚°Ü‚¢≤‚£¨‚°à‚£ø‚£ø‚£ø‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚°á‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚¢∏‚£ø‚£ø‚£ø‚°Ñ‚¢ø‚£ø‚£ø‚£ø‚£ø
‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ü‚£†‚£æ‚£ø‚£∑‚†∏‚£ø‚°á‚¢ª‚£ø‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∏‚£ø‚£ø‚¢†‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°è‚£º‚£ø‚£ø‚£ø‚°á‚†∏‚£ø‚£ø‚£ø‚£ø
‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†õ‚†∞‚£ø‚£ø‚£ø‚£ø‚£Ü‚¢π‚£ø‚†∏‚£ø‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚°ü‚£∏‚£ø‚£ø‚£ø‚£ø‚£ø‚°ü‚£∞‚£ø‚£ø‚£ø‚°ø‚¢Å‚£∑‚£§‚°π‚£ø‚£ø
‚£ø‚£ø‚£ø‚£ø‚°ü‚¢â‚£¥‚£æ‚£Ü‚†π‚£ø‚£ø‚£ø‚£ø‚£Ü‚†ª‚°Ü‚£ø‚£ø‚£ø‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚£ø‚£ø‚†á‚£ø‚£ø‚£ø‚£ø‚°ø‚¢ã‚£¥‚£ø‚£ø‚£ø‚†ü‚£†‚£æ‚£ø‚£ø‚£∑‚°å‚¢ø
‚£ø‚£ø‚£ø‚†ã‚£¥‚£ø‚£ø‚£ø‚£ø‚£∑‚°à‚†ª‚£ø‚£ø‚£ø‚£ø‚£ß‚¢∏‚£ø‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚¢∞‚£ø‚£ø‚£ø‚£ø‚£∑‚£ø‚£ø‚£ø‚°ø‚¢É‚£¥‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°å
‚£ø‚£ø‚¢É‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£¶‚°à‚†ª‚£ø‚£ø‚£ø‚°à‚£ø‚£ø‚£ß‚¢†‚¢§‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†¥‚†Ü‚£æ‚£ø‚°è‚£∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚¢ã‚£¥‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
‚£ø‚†á‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∂‚£å‚†ª‚¢ø‚°á‚¢ø‚£ø‚£ø‚†∞‚¢ø‚°Ç‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£ø‚†á‚£ø‚£ø‚°á‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚¢ã‚£¥‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
‚°ø‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£∂‚£¶‚¢∏‚£ø‚£ø‚°Ñ‚¢ø‚£ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£õ‚†ª‚¢∏‚£ø‚£ø‚¢Å‚£ø‚£ø‚£ø‚†ü‚£Å‚£¥‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
‚°á‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°Ä‚£ø‚£ø‚£á‚†ô‚£´‚£§‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†∏‚†ø‚°á‚£∏‚£ø‚°ü‚¢∏‚†ø‚¢ã‚£•‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
‚†á‚£ø‚£ø‚£ø‚£ø‚£ø‚£Ü‚†∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á‚¢ª‚£ø‚£ø‚°Ñ‚†ø‚£Ø‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°ª‚£ø‚¢Ä‚£ø‚£ø‚°è‚£†‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
‚†Ä‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°Ä‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚¢∏‚£ø‚£ø‚£á‚¢∞‚£ø‚¢ó‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢¥‚£ß‚†ô‚¢∏‚£ø‚£ø‚†É‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
‚†∞‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ß‚†∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°à‚£ø‚£ø‚£ø‚£Ü‚¢£‚£ø‚¢É‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚¢∞‚£ß‚†ª‚¢°‚£ø‚£ø‚£ø‚¢∞‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
‚†ò‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°Ü‚¢ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á‚¢ø‚£ø‚£Ø‚†ª‚£¶‚†â‚¢ø‚°á‚£ø‚°∑‚£∂‚¢≤‚£ø‚°û‚£ø‚†∫‚†ü‚£†‚¢ø‚£ø‚£ø‚°á‚£∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
‚†à‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°Ñ‚¢ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†∏‚£ø‚£ø‚£∑‚°ô‚¢∑‚£¶‚£î‚£à‚†â‚†õ‚†©‚†õ‚¢Å‚£â‚£¥‚°æ‚¢ã‚£º‚£ø‚£ü‚¢Ä‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
‚°Ñ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°Ñ‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°Ü‚¢ª‚£ø‚£ø‚£ø‚£∑‚£≠‚£õ‚†ª‚†ø‚†ø‚†ø‚†ø‚†ø‚¢õ‚£´‚£¥‚£ø‚£ø‚£ø‚†á‚£º‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
‚°á‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°Ñ‚†π‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°å‚†ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚£ø‚£ø‚£ø‚£ø‚¢ø‚¢ø‚£ø‚£ø‚£ø‚°ø‚†è‚£º‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
           THE LEGENDARY 67 KID APPEARS üò§üî•
""")


def main():
    print("üíÄ Yo what‚Äôs good! Welcome to **BaseBoi 3000** üî•\n")
    print("I convert bases faster than your Wi-Fi drops during Zoom class üß†üí®")
    print("Max base is 36 cuz anything higher and my brain melts üßç‚Äç‚ôÇÔ∏è\n")

    try:
        number_string = input("üëâ Drop the number (no goofy letters plz): ").strip()
        original_base = int(input("üìü What base we starting from? "))
        target_base = int(input("üéØ What base we converting to, chief? "))

        # üî• 67 check for input
        if number_string == "67":
            summon_67_kid()

        # Step 1: Convert to decimal
        decimal_value = to_decimal(number_string, original_base)

        # Step 2: Convert from decimal to target
        result = from_decimal(decimal_value, target_base)

        print("\nüíÖ Bet. Converting...")
        print(f"‚ú® {number_string} (base {original_base}) ‚û° {result} (base {target_base}) ‚ú®")

        # üî• 67 check for output
        if result == "67" or str(decimal_value) == "67":
            summon_67_kid()

        print("\nüßÉ Boom. You‚Äôre welcome. That number‚Äôs dripping with new base energy üíÖüíÖ")

    except ValueError:
        print("\nüò§ Bruh... that ain‚Äôt a valid number. Try again before I start ratioing you.")
    except Exception as e:
        print(f"\nüíÄ Bro I just exploded: {e}")

    print("\nü´° Thanks for using BaseBoi 3000 ‚Äî built different since 2025 üî•üî•üî•")


if __name__ == "__main__":
    main()